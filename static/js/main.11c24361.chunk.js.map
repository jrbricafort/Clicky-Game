{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","cards","gameOver","_this","setState","console","log","this","forEach","card","count","alert","concat","find","o","i","sort","Math","random","_this2","components_Wrapper_Wrapper","components_Header_Header","map","components_Card_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+lDAWeA,EARF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MAC1DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,WCDxBC,EAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,WCS1CC,EATA,SAAAd,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACUJ,EAAMe,MADhB,eACmCf,EAAMgB,oBCuD9BC,6MAtDXC,MAAQ,CACJC,QACAJ,MAAO,EACPC,UAAW,KAGfI,SAAW,WAWP,OAVIC,EAAKH,MAAMH,MAAQM,EAAKH,MAAMF,WAC9BK,EAAKC,SAAS,CAAEN,UAAWK,EAAKH,MAAMH,OAAS,WAC3CQ,QAAQC,IAAIC,KAAKP,MAAMF,aAG/BK,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACrBA,EAAKC,MAAQ,IAEjBC,MAAK,yBAAAC,OAA0BT,EAAKH,MAAMH,QAC1CM,EAAKC,SAAS,CAAEP,MAAO,KAChB,KAGXT,WAAa,SAAAC,GACTc,EAAKH,MAAMC,MAAMY,KAAK,SAACC,EAAGC,GACtB,GAAID,EAAEzB,KAAOA,EAAI,CACb,GAAuB,IAAnBY,EAAMc,GAAGL,MAMT,OALAT,EAAMc,GAAGL,MAAQT,EAAMc,GAAGL,MAAQ,EAClCP,EAAKC,SAAS,CAAEP,MAAOM,EAAKH,MAAMH,MAAQ,GAAK,WAC3CQ,QAAQC,IAAIC,KAAKP,MAAMH,SAE3BM,EAAKH,MAAMC,MAAMe,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPf,EAAKD,uFAMZ,IAAAiB,EAAAZ,KACL,OACIxB,EAAAC,EAAAC,cAACmC,EAAD,KACIrC,EAAAC,EAAAC,cAACoC,EAAD,CAAQxB,MAAOU,KAAKP,MAAMH,MAAOC,UAAWS,KAAKP,MAAMF,WAAvD,eACCS,KAAKP,MAAMC,MAAMqB,IAAI,SAAAb,GAAI,OACtB1B,EAAAC,EAAAC,cAACsC,EAAD,CACInC,WAAY+B,EAAK/B,WACjBC,GAAIoB,EAAKpB,GACTmC,IAAKf,EAAKpB,GACVI,MAAOgB,EAAKhB,kBAhDlBgC,aCDlBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.11c24361.chunk.js","sourcesContent":["import React from \"react\";\n// import \"./Card.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\n// import \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\n// import \"./Header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Score: {props.score} Highscore: {props.highscore}\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n    // Setting this.state.cards to the cards json array\n    state = {\n        cards,\n        score: 0,\n        highscore: 0\n    };\n\n    gameOver = () => {\n        if (this.state.score > this.state.highscore) {\n            this.setState({ highscore: this.state.score }, function () {\n                console.log(this.state.highscore);\n            });\n        }\n        this.state.cards.forEach(card => {\n            card.count = 0;\n        });\n        alert(`Game Over :( \\nscore: ${this.state.score}`);\n        this.setState({ score: 0 });\n        return true;\n    }\n\n    clickCount = id => {\n        this.state.cards.find((o, i) => {\n            if (o.id === id) {\n                if (cards[i].count === 0) {\n                    cards[i].count = cards[i].count + 1;\n                    this.setState({ score: this.state.score + 1 }, function () {\n                        console.log(this.state.score);\n                    });\n                    this.state.cards.sort(() => Math.random() - 0.5)\n                    return true;\n                } else {\n                    this.gameOver();\n                }\n            }\n        });\n    }\n    // Map over this.state.cards and render a cardCard component for each card object\n    render() {\n        return (\n            <Wrapper>\n                <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n                {this.state.cards.map(card => (\n                    <Card\n                        clickCount={this.clickCount}\n                        id={card.id}\n                        key={card.id}\n                        image={card.image}\n                    />\n                ))}\n            </Wrapper>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}